openapi: 3.0.0

info:
  title: Raspio API Documentation
  version: 1.2.0

servers:
  - url: http://localhost:3000/
    description: Local development server

components:
  schemas:
    Song:
      type: object
      properties:
        path:
          type: string
          description: Local path on the Raspberry Pi that can be used like an ID.
        title:
          type: string
          description: Title of the song.
        artist:
          type: string
          description: Artist that created the song.
        duration:
          type: integer
          minimum: 0
    NetworkConfiguration:
      type: object
      properties:
        mode:
          type: string
          enum:
            - station
            - ap
        ssid:
          type: string
        password:
          type: string
      required:
        - mode
        - ssid

paths:
  /transmission/start:
    post:
      summary: Starts radio transmission.
      parameters:
        - name: frequency
          description: The frequency in MHz that should be used for the transmission.
          in: query
          schema:
            type: integer
          required: true
      responses:
        '204':
          description: Transmission has started.
        '400':
          description: Transmission is already running.
      tags:
        - transmission
  /transmission/stop:
    post:
      summary: Stops radio transmission.
      responses:
        '204':
          description: Transmission has stopped.
        '404':
          description: Transmission was not running.
      tags:
        - transmission

  /network:
    get:
      summary: Returns the current network configuration. The password will not be returned.
      responses:
        '200':
          description: Current network configuration
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkConfiguration'
      tags:
        - network
    post:
      summary: Set the network configuration
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkConfiguration'
      responses:
        '200':
          description: The network configuration is or will be applied.
      tags:
        - network
  /ping:
    get:
      summary: Endpoint to test connectivity with the server.
      responses:
        '200':
          description: The server has received the request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    enum:
                      - success
                required:
                  - message
      tags:
        - network

  /songs:
    get:
      summary: Lists all available songs.
      responses:
        '200':
          description: List of all songs indexed by MPD.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Song'
      tags:
        - library
    post:
      summary: Uploads a new song.
      requestBody:
        content:
          audio/mp3:
            schema:
              description: The MP3 file that should be uploaded. It should contain as much metadata as possible but at least a title and an artist.
              type: string
              format: binary
      responses:
        '201':
          description: The song has been successfully uploaded.
      tags:
        - library

  /playlist:
    get:
      summary: Lists all songs in the playlist.
      responses:
        '200':
          description: List of all songs in the playlist.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Song'
      tags:
        - playlist
    post:
      summary: Adds a song to the playlist.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                path:
                  type: string
                  description: Path to the song in the MPD library.
                position:
                  type: integer
                  description: Position in the playlist. The songs after the position are moved behind the newly inserted song. If undefined, the song is placed at the end.
                  minimum: 0
              required:
                - path
            examples:
              end:
                summary: Placing a new song at the end.
                value:
                  path: "ambient/Loscil/2010 - Endless Falls/01. Endless Falls.mp3"
              specific:
                summary: Placing a new song at the start.
                value:
                  path: "ambient/Loscil/2010 - Endless Falls/01. Endless Falls.mp3"
                  position: 0
      responses:
        '201':
          description: Song was added.
        '404':
          description: A song with this path was not found on the server.
        default:
          description: Unexpected error.
      tags:
        - playlist
    delete:
      summary: Remove a song from the playlist.
      parameters:
        - name: position
          in: query
          required: true
          schema:
            type: integer
            minimum: 0
          description: Position of the song that should be removed.
      responses:
        '204':
          description: Song was removed from playlist.
        '404':
          description: There is no song on this position.
      tags:
        - playlist

  /playback:
    get:
      summary: Get the current playback state
      responses:
        '200':
          description: current playback state
          content:
            application/json:
              schema:
                type: object
                properties:
                  duration:
                    type: number
                    minimum: 0
                    description: Duration of the currently playing song in seconds
                  elapsed:
                    type: number
                    minimum: 0
                    description: Seconds of the currently playing song that have already elapsed
                  consume:
                    type: boolean
                    description: Whether or not consume mode is enabled
                  shuffle:
                    type: boolean
                    description: Whether or not the playlist is being shuffled
                  repeat:
                    type: boolean
                    description: Whether or not the current song is being looped
                  currentlyPlayingIndex:
                    type: number
                    minimum: 0
                    description: Index of the currently playing song in the playlist
                  state:
                    type: string
                    enum:
                      - play
                      - stop
                      - pause
                    description: Current playback state
                  volume:
                    type: number
                    minimum: 0
                    maximum: 100
                    description: playback volume
                  crossfade:
                    type: number
                    minimum: 0
                    description: crossfade amount
                required:
                  - state
      tags:
        - playback
  /playback/play:
    post:
      summary: Starts playing the current playlist.
      responses:
        '204':
          description: Playback was started.
      tags:
        - playback
  /playback/pause:
    post:
      summary: Pauses playing the current song/playlist.
      responses:
        '204':
          description: Playback was paused.
      tags:
        - playback
  /playback/previous:
    post:
      summary: Plays the previous song or jumps to the start of the current song.
      responses:
        '204':
          description: Previous song is playing.
      tags:
        - playback
  /playback/next:
    post:
      summary: Skips the current song and plays the next one.
      responses:
        '204':
          description: Song was skipped.
      tags:
        - playback
  /playback/stop:
    post:
      summary: Stops playing the current song.
      responses:
        '204':
          description: Playback was stopped.
      tags:
        - playback
  /playback/seek:
    post:
      summary: Sets the position of the song that is currently being played.
      parameters:
        - name: time
          description: Playback position to seek to
          in: query
          required: true
          schema:
            type: number
            minimum: 0
      responses:
        '204':
          description: Position has been updated.
      tags:
        - playback
  /playback/consume:
    post:
      summary: Turns consume mode on/off. Consume mode means that songs are removed from the playlist after they have been played.
      parameters:
        - name: consume
          in: query
          required: true
          schema:
            type: boolean
      responses:
        '204':
          description: Consume mode has been set.
      tags:
        - playback
  /playback/crossfade:
    post:
      summary: Sets the crossfade amount. 0 equals disabled.
      parameters:
        - name: amount
          description: crossfade duration in seconds
          in: query
          required: true
          schema:
            type: integer
            minimum: 0
      responses:
        '204':
          description: Crossfade amount has been set.
      tags:
        - playback
  /playback/shuffle:
    post:
      summary: Turns shuffle on/off.
      parameters:
        - name: shuffle
          in: query
          required: true
          schema:
            type: boolean
      responses:
        '204':
          description: Shuffle has been set.
      tags:
        - playback
  /playback/repeat:
    post:
      summary: Turns repeat mode on/off.
      parameters:
        - name: repeat
          in: query
          required: true
          schema:
            type: boolean
      responses:
        '204':
          description: Repeat mode has been set.
      tags:
        - playback
  /playback/volume:
    post:
      summary: Sets the playback volume
      parameters:
        - name: volume
          in: query
          required: true
          schema:
            type: integer
            minimum: 0
            maximum: 100
      responses:
        '204':
          description: Playback volume has been set.
      tags:
        - playback